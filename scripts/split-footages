#!/usr/bin/env bash
# shellcheck shell=sh

INPUT_PATH="$1"
OUTPUT_PATH="$2"

if [ ! -d "$INPUT_PATH" ]; then
    echo "An input path must be provided as first argument."
    exit 1
fi

mkdir -p "$OUTPUT_PATH"
if [ ! -d "$OUTPUT_PATH" ]; then
    echo "An output path must be provided as second argument."
    exit 1
fi

duration() {
    duration=$(ffprobe -v error -show_entries format=duration -sexagesimal -of default=noprint_wrappers=1:nokey=1 "$1")
    echo "${duration%%.*}"
}

remap() {
    file="$1"
    pathname=$(dirname "$file")
    pathname="${pathname##*/}"
    filename=$(basename "$file")
    fext=${filename##*.}
    fname=${filename%%.*}

    creation=$(stat --format %y "$1")
    creation_date=$(date +"%Y-%m-%d" --date "$creation")
    creation_time=$(date +"%H:%M:%S" --date "$creation")

    duration=$(duration "$file")

    output_dir="$OUTPUT_PATH/$creation_date/$pathname"
    output_filename=$(echo "${fname}-[${creation_time}]-[${duration}].${fext}" | sed 's/:/_/g')

    echo "$output_dir/$output_filename"
}

list() {
    find "$INPUT_PATH" -type f -print0 2>/dev/null | sort
}

move() {
    file=$1

    dest_file=$(remap "$file")
    dest_path=$(dirname "$dest_file")

    echo "Moving [$file] to [$dest_file]"

    mkdir -p "$dest_path"
    mv "$file" "$dest_file"
}

list | while read -d $'\0' -r file; do
    move "$file"
done
